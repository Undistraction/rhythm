////
/// @author Pedr Browne (extracted from Compass Vertical Rhythm by Eric M. Suzanne).
/// @group API
/// @access public
////

/// Establish a rhythm throughout the document using a font-size and line-height.
///
/// @param {Number} $font-size ($rhythm-base-font-size)
///  The font-size to use as base
///
/// @output
///  Render html element with `font-size` and `line-height` set.
///
@mixin rhythm-establish($font-size: $rhythm-base-font-size, $line-height: $rhythm-base-line-height) {
  $processed-values: rhythm-process-base-values($font-size, $line-height);

  // Render HTML element
  html {
      font-size: nth($processed-values, 1);
      line-height: nth($processed-values, 2);
  }
}

/// Adjust a block to have a different font size and line height to maintain the
/// rhythm. `$lines` specifies how many multiples of the baseline rhythm each line
/// of this font should use up. It does not have to be an integer, but it
/// defaults to the smallest integer that is large enough to fit the font.
/// Use `$from-context` to adjust from a font-size other than the base font-size.
///
/// @param {String} $font-size
///  The font-size for this block
///
/// @param {Number} $lines
///  The number of rhythm units (lines) each line of text should should fill.
///
/// @param {Number} $from-context
///  The context of the block (when using ems)
///
/// @output
///  Output the calculated `font-size` and `line-height`.
///
@mixin rhythm($font-size, $lines: auto, $from-context: $rhythm-base-font-size) {
  $font-size: rhythm-convert-value($font-size, px, $from-context);

  @if $lines == auto {
    $lines: rhythm-lines-for-font-size($font-size);
  }
  @include rhythm-render-property(font-size, rhythm-convert-value($font-size, $rhythm-render-unit, $from-context));
  @include rhythm-render-leading($lines, $font-size);
}

/// Use a different rhythm for a block by temporarily changing the configuration values
/// '$rhythm-base-font-size' and '$rhythm-base-line-height'. While this will do nothing by itself,
/// it can be combined with `rhythm-establish` to change the global rhythm temporarily, for example
/// at a breakpoint.
///
/// @param {Number} $new-base-font-size
///  The new `base-font-size` to use for the content of this mixin
///
/// @param {Number} $new-base-line-height
///  The new `base-line-height` to use for the content of this mixin
///
/// @see https://github.com/chriseppstein/compass/pull/1352
/// @see https://github.com/Compass/compass/issues/1487
///
@mixin rhythm-context($new-base-font-size, $new-base-line-height) {

   // Save the baseline context
   $initial-font-size: $base-font-size;
   $initial-line-height: $base-line-height;

   // Apply the new context
   $base-font-size: $new-base-font-size !global;
   $base-line-height: $new-base-line-height !global;

   // Render content passed to mixin
   @content;

   // Reapply the initial context
   $base-font-size: $initial-font-size !global;
   $base-line-height: $initial-line-height !global;
}